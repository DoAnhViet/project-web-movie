@model WebMovie.Models.MovieListResponse
@{
    var slug = ViewBag.CategorySlug as string;

    // üå∏ √Ånh x·∫° slug ‚Üí t√™n th·ªÉ lo·∫°i ti·∫øng Vi·ªát c√≥ d·∫•u
    var categoryNames = new Dictionary<string, string>
    {
        { "hoat-hinh", "Ho·∫°t H√¨nh" },
        { "phim-hoat-hinh", "Phim Ho·∫°t H√¨nh" },
        { "phim-hanh-dong", "Phim H√†nh ƒê·ªông" },
        { "phim-tinh-cam", "Phim T√¨nh C·∫£m" },
        { "phim-hai-huoc", "Phim H√†i H∆∞·ªõc" },
        { "phim-kinh-di", "Phim Kinh D·ªã" },
        { "phim-vien-tuong", "Phim Vi·ªÖn T∆∞·ªüng" },
        { "phim-chieu-rap", "Phim Chi·∫øu R·∫°p" },
        { "phim-le", "Phim L·∫ª" },
        { "phim-bo", "Phim B·ªô" },
        { "han-quoc", "H√†n Qu·ªëc" },
        { "trung-quoc", "Trung Qu·ªëc" },
        { "nhat-ban", "Nh·∫≠t B·∫£n" },
        { "my", "M·ªπ" },
        { "viet-nam", "Vi·ªát Nam" }
    };

    var categoryName = categoryNames.ContainsKey(slug ?? "") ? categoryNames[slug] : slug;

    ViewData["Title"] = categoryName;
    string currentSort = Context.Request.Query["sort_type"];
    string currentCountry = Context.Request.Query["country"];
}

<div class="container mt-4">
    <h2 class="mb-4">@ViewData["Title"]</h2>

    <!-- B·ªô l·ªçc -->
    <form method="get" class="row g-3 mb-4">
        <input type="hidden" name="slug" value="@slug" />

        <div class="col-md-4 col-sm-6">
            <label for="country" class="form-label">Qu·ªëc gia</label>
            <select id="country" name="country" class="form-select" onchange="this.form.submit()">
                <option value="">T·∫•t c·∫£</option>
                <option value="vi" selected="@(currentCountry == "vi" ? "selected" : null)">Vi·ªát Nam</option>
                <option value="us" selected="@(currentCountry == "us" ? "selected" : null)">M·ªπ</option>
                <option value="kr" selected="@(currentCountry == "kr" ? "selected" : null)">H√†n Qu·ªëc</option>
                <option value="cn" selected="@(currentCountry == "cn" ? "selected" : null)">Trung Qu·ªëc</option>
                <option value="jp" selected="@(currentCountry == "jp" ? "selected" : null)">Nh·∫≠t B·∫£n</option>
            </select>
        </div>

        <div class="col-md-4 col-sm-6">
            <label for="sort_type" class="form-label">S·∫Øp x·∫øp</label>
            <select id="sort_type" name="sort_type" class="form-select" onchange="this.form.submit()">
                <option value="desc" selected="@(currentSort == "desc" ? "selected" : null)">M·ªõi nh·∫•t</option>
                <option value="asc" selected="@(currentSort == "asc" ? "selected" : null)">C≈© nh·∫•t</option>
            </select>
        </div>
    </form>

    <!-- Danh s√°ch phim -->
    <div class="row">
        @if (Model?.Items != null && Model.Items.Any())
        {
            @foreach (var movie in Model.Items)
            {
                <div class="col-lg-2 col-md-3 col-sm-4 col-6 movie-card">
                    <a href="/Watch?slug=@movie.Slug">
                        <div class="position-relative">
                            <img src="@movie.PosterUrl" alt="@movie.Name" loading="lazy" class="img-fluid rounded" />
                            @if (!string.IsNullOrEmpty(movie.Quality))
                            {
                                <span class="badge bg-warning text-dark position-absolute top-0 start-0 m-2">@movie.Quality</span>
                            }
                            @if (!string.IsNullOrEmpty(movie.EpisodeCurrent))
                            {
                                <span class="badge bg-danger position-absolute top-0 end-0 m-2">@movie.EpisodeCurrent</span>
                            }
                        </div>
                        <div class="movie-title mt-2 fw-semibold">@movie.Name</div>
                        @if (!string.IsNullOrEmpty(movie.OriginName))
                        {
                            <div class="text-muted small">@movie.OriginName</div>
                        }
                    </a>
                </div>
            }
        }
        else
        {
            <div class="col-12 text-center py-5">
                <i class="fas fa-film fa-3x text-muted mb-3"></i>
                <h4 class="text-muted">Kh√¥ng t√¨m th·∫•y phim n√†o</h4>
            </div>
        }
    </div>

    <!-- Ph√¢n trang -->
    @if (Model?.Pagination != null && Model.Pagination.TotalPages > 1)
    {
        var pagination = Model.Pagination;
        <div class="pagination-container text-center mt-4">
            <ul class="pagination justify-content-center">
                @if (pagination.CurrentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(pagination.CurrentPage - 1)&sort_type=@currentSort&country=@currentCountry">
                            <i class="fas fa-chevron-left"></i> Tr∆∞·ªõc
                        </a>
                    </li>
                }

                @for (int i = Math.Max(1, pagination.CurrentPage - 2);
                     i <= Math.Min(pagination.TotalPages, pagination.CurrentPage + 2);
                     i++)
                {
                    <li class="page-item @(i == pagination.CurrentPage ? "active" : "")">
                        <a class="page-link" href="?page=@i&sort_type=@currentSort&country=@currentCountry">@i</a>
                    </li>
                }

                @if (pagination.CurrentPage < pagination.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" href="?page=@(pagination.CurrentPage + 1)&sort_type=@currentSort&country=@currentCountry">
                            Sau <i class="fas fa-chevron-right"></i>
                        </a>
                    </li>
                }
            </ul>
        </div>
    }
</div>
